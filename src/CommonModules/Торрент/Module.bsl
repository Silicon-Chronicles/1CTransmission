#Область ПрограммныйИнтерфейс

#Область TorrentActionRequests

Процедура TorrentStart(МассивИдентификаторов) Экспорт
	
	Параметры = Новый Структура("ids", МассивИдентификаторов);
	
	ТелоЗапроса = ТоррентСлужебный.ПолучитьТелоЗапроса("torrent-start", Параметры);
	Результат = ТоррентСлужебный.ОтправитьЗапрос(ТелоЗапроса);
	
	Если Результат["result"] <> "success" Тогда
		ТекстОшибки = НСтр("ru = 'Не удалось выполнить операцию. Ошибка при вызове метода torrent-start'");
		ЗарегистрироватьОшибку(ТекстОшибки);
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;	
	
КонецПроцедуры

Процедура TorrentStartNow(МассивИдентификаторов) Экспорт
	
	Параметры = Новый Структура("ids", МассивИдентификаторов);
	
	ТелоЗапроса = ТоррентСлужебный.ПолучитьТелоЗапроса("torrent-start-now", Параметры);
	Результат = ТоррентСлужебный.ОтправитьЗапрос(ТелоЗапроса);
	
	Если Результат["result"] <> "success" Тогда
		ТекстОшибки = НСтр("ru = 'Не удалось выполнить операцию. Ошибка при вызове метода torrent-start-now'");
		ЗарегистрироватьОшибку(ТекстОшибки);
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;	
	
КонецПроцедуры

Процедура TorrentStop(МассивИдентификаторов) Экспорт
	
	Параметры = Новый Структура("ids", МассивИдентификаторов);
	
	ТелоЗапроса = ТоррентСлужебный.ПолучитьТелоЗапроса("torrent-stop", Параметры);
	Результат = ТоррентСлужебный.ОтправитьЗапрос(ТелоЗапроса);
	
	Если Результат["result"] <> "success" Тогда
		ТекстОшибки = НСтр("ru = 'Не удалось выполнить операцию. Ошибка при вызове метода torrent-stop'");
		ЗарегистрироватьОшибку(ТекстОшибки);
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;		
	
КонецПроцедуры

Процедура TorrentVerify(МассивИдентификаторов) Экспорт
	
	Параметры = Новый Структура("ids", МассивИдентификаторов);
	
	ТелоЗапроса = ТоррентСлужебный.ПолучитьТелоЗапроса("torrent-verify", Параметры);
	Результат = ТоррентСлужебный.ОтправитьЗапрос(ТелоЗапроса);
	
	Если Результат["result"] <> "success" Тогда
		ТекстОшибки = НСтр("ru = 'Не удалось выполнить операцию. Ошибка при вызове метода torrent-verify'");
		ЗарегистрироватьОшибку(ТекстОшибки);
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;		
		
КонецПроцедуры

Процедура TorrentReannounce(МассивИдентификаторов) Экспорт
	
	Параметры = Новый Структура("ids", МассивИдентификаторов);
	
	ТелоЗапроса = ТоррентСлужебный.ПолучитьТелоЗапроса("torrent-reannounce", Параметры);
	Результат = ТоррентСлужебный.ОтправитьЗапрос(ТелоЗапроса);
	
	Если Результат["result"] <> "success" Тогда
		ТекстОшибки = НСтр("ru = 'Не удалось выполнить операцию. Ошибка при вызове метода torrent-reannounce'");
		ЗарегистрироватьОшибку(ТекстОшибки);
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;	
		
КонецПроцедуры

#КонецОбласти

#КонецОбласти
	


Функция PortTest() Экспорт
	
	ТелоЗапроса = ТоррентСлужебный.ПолучитьТелоЗапроса("port-test");
	Результат = ТоррентСлужебный.ОтправитьЗапрос(ТелоЗапроса);
	Если Результат["result"] = "success" Тогда
		Возврат Результат["arguments"]["port-is-open"];
	Иначе
		ВызватьИсключение НСтр("ru = 'Не удалось получить значение'");
	КонецЕсли;
	
КонецФункции

Функция TorrentGet(Ид = Неопределено, МассивПолейПараметр = Неопределено) Экспорт
	
	Если Ид = Неопределено Тогда
		МассивПолей = ТоррентПоляЗапросов.ПолучитьСписокПолейДляТабличнойЧасти();
	Иначе
		Если МассивПолейПараметр = Неопределено Тогда
			МассивПолей = ТоррентПоляЗапросов.ПолучитьПолныйСписокПолейОписанияТоррента();
		Иначе
			МассивПолей = МассивПолейПараметр;
		КонецЕсли;
	КонецЕсли;
	
	Параметры = Новый Структура;
	Параметры.Вставить("fields", МассивПолей);
	Если ЗначениеЗаполнено(Ид) Тогда
		Параметры.Вставить("ids", Ид)
	КонецЕсли;
	
	ТелоЗапроса = ТоррентСлужебный.ПолучитьТелоЗапроса("torrent-get", Параметры);
	Результат = ТоррентСлужебный.ОтправитьЗапрос(ТелоЗапроса, Истина);
	
	Если Результат["result"] = "success" Тогда
		Возврат Результат["arguments"]["torrents"];
	Иначе
		ВызватьИсключение НСтр("ru = 'Не удалось получить значение'");
	КонецЕсли;
	
КонецФункции


Функция SessionStats() Экспорт
	
	ТелоЗапроса = ТоррентСлужебный.ПолучитьТелоЗапроса("session-stats");
	Результат = ТоррентСлужебный.ОтправитьЗапрос(ТелоЗапроса, Истина);
	
	Если Результат["result"] = "success" Тогда
		Возврат Результат["arguments"];
	Иначе
		ВызватьИсключение НСтр("ru = 'Не удалось получить значение'");
	КонецЕсли;
КонецФункции

#Область СлужебныеПроцедурыИФункции

Процедура ЗарегистрироватьОшибку(ТекстОшибки)
	
	ИмяСобытия = НСтр("ru = 'КлиентTransmission'");
	ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка, , , ТекстОшибки);
	
КонецПроцедуры

#КонецОбласти